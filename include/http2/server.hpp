// /**
//  * @file server.hpp
//  * @brief –ó–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è HTTP/2 —Å–µ—Ä–≤–µ—Ä–∞.
//  *
//  * –†–µ–∞–ª–∏–∑—É–µ—Ç –ø—Ä–æ—Å—Ç–æ–π HTTP/2 —Å–µ—Ä–≤–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç GET –∏ HEAD –∑–∞–ø—Ä–æ—Å—ã.
//  * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–π —Å–µ—Ç–µ–≤–æ–π —Å–≤—è–∑–Ω–æ—Å—Ç–∏ –∏ –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–∫—Å–∏.
//  * –†–∞–±–æ—Ç–∞–µ—Ç –ø–æ–≤–µ—Ä—Ö TLS (HTTPS).
//  *
//  * @author Telian Edward <telianedward@icloud.com>
//  * @assisted-by AI-Assistant
//  * @date 2025-10-27
//  * @version 1.0
//  * @license MIT
//  */
// #pragma once

// #include <iostream>
// #include <string>
// #include <vector>
// #include <unordered_map>
// #include <atomic>
// #include <sys/socket.h>
// #include <netinet/in.h>
// #include <unistd.h>
// #include <fcntl.h>
// #include <arpa/inet.h>
// #include <csignal>
// #include <cerrno>
// #include <sys/select.h>
// #include <thread>
// #include "../logger/logger.h"
// #include <openssl/ssl.h>
// #include <openssl/err.h>

// // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å nghttp2
// #include <nghttp2/nghttp2.h>

// /**
//  * @brief –ö–ª–∞—Å—Å HTTP/2 —Å–µ—Ä–≤–µ—Ä–∞.
//  *
//  * –°–ª—É—à–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ TCP-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—Ç—É –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç HTTP/2 –∑–∞–ø—Ä–æ—Å—ã.
//  * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç: GET, HEAD, favicon.ico, main.css, main.js.
//  */
// class Http2Server
// {
// public:
//     /**
//      * @brief –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä.
//      * @param port –ü–æ—Ä—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Å–ª—É—à–∞—Ç—å —Å–µ—Ä–≤–µ—Ä (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 8586).
//      * @param backend_ip IP-–∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ –≤ –†–æ—Å—Å–∏–∏.
//      * @param backend_port –ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ –†–æ—Å—Å–∏–∏.
//      */
//     explicit Http2Server(int port = 8586, const std::string &backend_ip = "10.8.0.11", int backend_port = 8587);

//     /**
//      * @brief –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ Http2Server.
//      *
//      * –û—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã: SSL-–∫–æ–Ω—Ç–µ–∫—Å—Ç, SSL-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.
//      */
//     ~Http2Server();

//     /**
//      * @brief –ó–∞–ø—É—Å–∫–∞–µ—Ç HTTP/2 —Å–µ—Ä–≤–µ—Ä.
//      * @return true –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏, false –ø—Ä–∏ –æ—à–∏–±–∫–µ.
//      */
//     bool run();

//     /**
//      * @brief –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç HTTP/2 —Å–µ—Ä–≤–µ—Ä.
//      */
//     void stop();

// private:
//     // üëá –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫
//     struct PendingSend
//     {
//         int fd;          ///< –°–æ–∫–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
//         const char *ptr; ///< –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –Ω–∞—á–∞–ª–æ –¥–∞–Ω–Ω—ã—Ö
//         size_t len;      ///< –û–±—â–∞—è –¥–ª–∏–Ω–∞ –¥–∞–Ω–Ω—ã—Ö
//         size_t sent;     ///< –°–∫–æ–ª—å–∫–æ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
//     };

//     /**
//      * @brief –ö–∞—Ä—Ç–∞ –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫.
//      *
//      * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ EAGAIN/EWOULDBLOCK.
//      * –ö–ª—é—á ‚Äî client_fd, –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ PendingSend.
//      */
//     std::unordered_map<int, PendingSend> pending_sends_;

//     /**
//      * @brief –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏.
//      * @details –°–æ–¥–µ—Ä–∂–∏—Ç:
//      *          - backend_fd: –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å–æ–∫–µ—Ç–∞ –±—ç–∫–µ–Ω–¥–∞.
//      *          - ssl: —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ SSL-–æ–±—ä–µ–∫—Ç (nullptr, –µ—Å–ª–∏ –Ω–µ—Ç TLS).
//      *          - handshake_done: true, –µ—Å–ª–∏ TLS handshake –∑–∞–≤–µ—Ä—à—ë–Ω.
//      *          - session: —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ nghttp2_session.
//      */
//     struct ConnectionInfo
//     {
//         int backend_fd;      ///< –î–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å–æ–∫–µ—Ç–∞ –±—ç–∫–µ–Ω–¥–∞
//         SSL *ssl;            ///< –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ SSL-–æ–±—ä–µ–∫—Ç (nullptr, –µ—Å–ª–∏ –Ω–µ—Ç TLS)
//         bool handshake_done; ///< true, –µ—Å–ª–∏ TLS handshake –∑–∞–≤–µ—Ä—à—ë–Ω
//         nghttp2_session *session; ///< –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ nghttp2_session
//     };

//     // üü¢ –ö–∞—Ä—Ç–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π: client_fd ‚Üí ConnectionInfo
//     std::unordered_map<int, ConnectionInfo> connections_; ///< –ö–∞—Ä—Ç–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π

//     int listen_fd_;                       ///< –°–æ–∫–µ—Ç –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
//     int port_;                            ///< –ü–æ—Ä—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Å–ª—É—à–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä
//     std::string backend_ip_;              ///< IP —Å–µ—Ä–≤–µ—Ä–∞ –≤ –†–æ—Å—Å–∏–∏
//     int backend_port_;                    ///< –ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ –†–æ—Å—Å–∏–∏
//     volatile sig_atomic_t running_{true}; ///< –§–ª–∞–≥ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞

//     // üü° –ó–ê–¢–ï–ú ‚Äî SSL-–ü–û–õ–Ø
//     SSL_CTX *ssl_ctx_;                               ///< SSL-–∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è TLS
//     std::unordered_map<int, SSL *> ssl_connections_; ///< –ö–∞—Ä—Ç–∞: client_fd ‚Üí SSL*

//     // üü† –ó–ê–¢–ï–ú ‚Äî –ö–ê–†–¢–´ –°–û–ï–î–ò–ù–ï–ù–ò–ô
//     std::unordered_map<int, time_t> timeouts_; ///< –ö–∞—Ä—Ç–∞ —Ç–∞–π–º–∞—É—Ç–æ–≤: client_fd ‚Üí –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

//     /**
//      * @brief –°–æ–∑–¥–∞–µ—Ç –∏ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ —Å–æ–∫–µ—Ç—É —Å–µ—Ä–≤–µ—Ä–∞ –≤ –†–æ—Å—Å–∏–∏.
//      * @return –î–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å–æ–∫–µ—Ç–∞ –∏–ª–∏ -1 –ø—Ä–∏ –æ—à–∏–±–∫–µ.
//      */
//     [[nodiscard]] int connect_to_backend() noexcept;

//     /**
//      * @brief –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–π —Ä–µ–∂–∏–º —Å–æ–∫–µ—Ç–∞.
//      * @param fd –î–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å–æ–∫–µ—Ç–∞.
//      * @return true –ø—Ä–∏ —É—Å–ø–µ—Ö–µ, false –ø—Ä–∏ –æ—à–∏–±–∫–µ.
//      */
//     [[nodiscard]] bool set_nonblocking(int fd) noexcept;

//     /**
//      * @brief –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤–æ–µ –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.
//      */
//     void handle_new_connection() noexcept;

//     /**
//      * @brief –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞.
//      */
//     void handle_io_events() noexcept;

//     /**
//      * @brief –ü–µ—Ä–µ–¥–∞—ë—Ç –¥–∞–Ω–Ω—ã–µ –º–µ–∂–¥—É –¥–≤—É–º—è —Å–æ–∫–µ—Ç–∞–º–∏ (–∫–ª–∏–µ–Ω—Ç ‚Üî –±—ç–∫–µ–Ω–¥) –≤ –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–µ–º —Ä–µ–∂–∏–º–µ, —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π TLS –∏ HTTP/2.
//      *
//      * –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –æ–¥–Ω–æ–≥–æ —Å–æ–∫–µ—Ç–∞ (`from_fd`) –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Ö –Ω–∞ –¥—Ä—É–≥–æ–π (`to_fd`),
//      * –ø—Ä–∏ —ç—Ç–æ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è:
//      * - —á–∞—Å—Ç–∏—á–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É (EAGAIN/EWOULDBLOCK),
//      * - –æ—à–∏–±–∫–∏ —á—Ç–µ–Ω–∏—è/–∑–∞–ø–∏—Å–∏,
//      * - –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è,
//      * - TLS-—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ (–µ—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞—â–∏—â–µ–Ω–æ),
//      * - HTTP/2 —Ñ—Ä–µ–π–º—ã (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HTTP/2).
//      *
//      * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è HTTP/2 —Ç—Ä–∞—Ñ–∏–∫–∞ —á–µ—Ä–µ–∑ WireGuard-—Ç—É–Ω–Ω–µ–ª—å.
//      * TLS-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤ –ù–∏–¥–µ—Ä–ª–∞–Ω–¥–∞—Ö, –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –Ω–∞ –±—ç–∫–µ–Ω–¥ –≤ –†–æ—Å—Å–∏–∏ –≤ –≤–∏–¥–µ –æ–±—ã—á–Ω–æ–≥–æ HTTP.
//      *
//      * @param from_fd –î–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å–æ–∫–µ—Ç–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (–∫–ª–∏–µ–Ω—Ç –∏–ª–∏ –±—ç–∫–µ–Ω–¥).
//      * @param to_fd –î–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å–æ–∫–µ—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–±—ç–∫–µ–Ω–¥ –∏–ª–∏ –∫–ª–∏–µ–Ω—Ç).
//      * @param ssl –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ SSL-–æ–±—ä–µ–∫—Ç (nullptr, –µ—Å–ª–∏ –Ω–µ—Ç TLS).
//      * @param session –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ nghttp2_session (nullptr, –µ—Å–ª–∏ –Ω–µ—Ç HTTP/2).
//      * @return true –µ—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ –∏ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å, false –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.
//      * @throws –ù–∏–∫–∞–∫–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è noexcept.
//      * @warning –ù–µ –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–∞–Ω–Ω—ã—Ö ‚Äî –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ busy-waiting.
//      * @note –ï—Å–ª–∏ `from_fd` —Å–≤—è–∑–∞–Ω —Å SSL-–æ–±—ä–µ–∫—Ç–æ–º ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è SSL_read(). –ò–Ω–∞—á–µ ‚Äî recv().
//      */
//     [[nodiscard]] bool forward_data(int from_fd, int to_fd, SSL *ssl, nghttp2_session *session) noexcept;

//     /**
//      * @brief –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç nghttp2_session.
//      * @param client_fd –î–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å–æ–∫–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞.
//      * @param ssl –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ SSL-–æ–±—ä–µ–∫—Ç.
//      * @return –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ nghttp2_session –∏–ª–∏ nullptr –ø—Ä–∏ –æ—à–∏–±–∫–µ.
//      */
//     [[nodiscard]] nghttp2_session *init_nghttp2_session(int client_fd, SSL *ssl) noexcept;

//     /**
//      * @brief –û–±—Ä–∞–±–æ—Ç—á–∏–∫ nghttp2 –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤.
//      * @param session –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ nghttp2_session.
//      * @param frame –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ nghttp2_frame.
//      * @param name –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –∏–º—è –∑–∞–≥–æ–ª–æ–≤–∫–∞.
//      * @param namelen –î–ª–∏–Ω–∞ –∏–º–µ–Ω–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞.
//      * @param value –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞.
//      * @param valuelen –î–ª–∏–Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞.
//      * @param flags –§–ª–∞–≥–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞.
//      * @param user_data –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ.
//      * @return 0 –ø—Ä–∏ —É—Å–ø–µ—Ö–µ, -1 –ø—Ä–∏ –æ—à–∏–±–∫–µ.
//      */
//     static int on_header(nghttp2_session *session, const nghttp2_frame *frame, const uint8_t *name, size_t namelen, const uint8_t *value, size_t valuelen, uint8_t flags, void *user_data);

//     /**
//      * @brief –û–±—Ä–∞–±–æ—Ç—á–∏–∫ nghttp2 –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
//      * @param session –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ nghttp2_session.
//      * @param frame –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ nghttp2_frame.
//      * @param data –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –¥–∞–Ω–Ω—ã–µ.
//      * @param len –î–ª–∏–Ω–∞ –¥–∞–Ω–Ω—ã—Ö.
//      * @param flags –§–ª–∞–≥–∏ –¥–∞–Ω–Ω—ã—Ö.
//      * @param user_data –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ.
//      * @return 0 –ø—Ä–∏ —É—Å–ø–µ—Ö–µ, -1 –ø—Ä–∏ –æ—à–∏–±–∫–µ.
//      */
//     static int on_data_chunk_recv(nghttp2_session *session, const nghttp2_frame *frame, const uint8_t *data, size_t len, void *user_data);

//     /**
//      * @brief –û–±—Ä–∞–±–æ—Ç—á–∏–∫ nghttp2 –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ñ—Ä–µ–π–º–∞.
//      * @param session –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ nghttp2_session.
//      * @param frame –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ nghttp2_frame.
//      * @param user_data –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ.
//      * @return 0 –ø—Ä–∏ —É—Å–ø–µ—Ö–µ, -1 –ø—Ä–∏ –æ—à–∏–±–∫–µ.
//      */
//     static int on_frame_recv(nghttp2_session *session, const nghttp2_frame *frame, void *user_data);

//     /**
//      * @brief –û–±—Ä–∞–±–æ—Ç—á–∏–∫ nghttp2 –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö.
//      * @param session –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ nghttp2_session.
//      * @param data –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –¥–∞–Ω–Ω—ã–µ.
//      * @param len –î–ª–∏–Ω–∞ –¥–∞–Ω–Ω—ã—Ö.
//      * @param flags –§–ª–∞–≥–∏ –¥–∞–Ω–Ω—ã—Ö.
//      * @param user_data –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ.
//      * @return 0 –ø—Ä–∏ —É—Å–ø–µ—Ö–µ, -1 –ø—Ä–∏ –æ—à–∏–±–∫–µ.
//      */
//     static int send_callback(nghttp2_session *session, const uint8_t *data, size_t len, int flags, void *user_data);

//     /**
//      * @brief –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML-–æ—Ç–≤–µ—Ç –¥–ª—è –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –ø—É—Ç–∏.
//      * @return –°—Ç—Ä–æ–∫–∞ —Å HTML-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º.
//      */
//     [[nodiscard]] std::string generate_index_html() const;

//     /**
//      * @brief –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –¥–ª—è favicon.ico.
//      * @return –°—Ç—Ä–æ–∫–∞ —Å –±–∏–Ω–∞—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ favicon.
//      */
//     [[nodiscard]] std::string generate_favicon() const;

//     /**
//      * @brief –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –¥–ª—è main.css.
//      * @return –°—Ç—Ä–æ–∫–∞ —Å CSS-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º.
//      */
//     [[nodiscard]] std::string generate_main_css() const;

//     /**
//      * @brief –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –¥–ª—è main.js.
//      * @return –°—Ç—Ä–æ–∫–∞ —Å JS-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º.
//      */
//     [[nodiscard]] std::string generate_main_js() const;
// };